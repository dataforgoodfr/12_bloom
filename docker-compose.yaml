x-common-infos:
  # Env variables stored in a .env file at same level than docker-compose.yaml
  environment: &common-env
    POSTGRES_HOSTNAME: ${POSTGRES_HOSTNAME}
    POSTGRES_PORT: ${POSTGRES_PORT}
    POSTGRES_DB: ${POSTGRES_DB}
    POSTGRES_USER: ${POSTGRES_USER}
    POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

services:
  bloom:
    container_name: bloom
    image: d4g/bloom:${VERSION:-latest}
    build:
        context: ./bloom/
        
    command: streamlit run Trawlwatcher.py
    volumes:
      - ./bloom:/source_code
    environment:
      <<: *common-env
    ports:
      - 8501:8501
    networks:
        - bloom_net
    depends_on:
      init:
        condition: service_completed_successfully

  postgres:
    container_name: postgres_bloom
    image: ${POSTGIS_IMAGE:-postgis/postgis:14-3.3-alpine}
    environment:
      <<: *common-env
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
        - bloom_net
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready --quiet --dbname=${POSTGRES_DB} --username=${POSTGRES_USER}']
      interval: 100ms
      timeout: 14s
      retries: 140
      start_period: 0s

  init:
    container_name: init_bloom
    hostname: init_bloom
    image: d4g/bloom:${VERSION:-latest}

    # Nominal start:
    command: alembic check
    # Debug start:
    #command: bash
    #tty: true
    #stdin_open: true

    environment:
        <<: *common-env
    volumes:
        - ./bloom/data:/source_code/data
        - ./bloom/alembic:/source_code/alembic
        - ./bloom/alembic.ini:/source_code/alembic.ini
        #- ./bloom/bloom:/source_code/bloom
    networks:
        - bloom_net
    depends_on:
      postgres:
        condition: service_healthy # The service is working and still running

networks:
  bloom_net:
    name: bloom_net